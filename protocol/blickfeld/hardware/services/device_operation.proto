syntax = "proto3";

import "blickfeld/base/options.proto";
import "google/protobuf/empty.proto";
package blickfeld.hardware.services;

option (.blickfeld.base.access_control_file) = {
  level: LEVEL_PUBLIC
};

// This service is used for starting and stopping the device operation.
// Normally, the device is started and stopped based on the client connections. If there is a client using the Qb2, the
// device will start and stay in operation until all clients disconnected. The start function of this service overrides
// this behaviour, i.e. when started using the start function the device will stay operational even though no clients
// are connected. This allows a faster retrieval of frames once a client connects as the startup phase is skipped.
service DeviceOperation {
  option (.blickfeld.base.access_control_service) = {
    level: LEVEL_PUBLIC
  };
  option (.blickfeld.base.protocol_maturity_service) = {
    level: LEVEL_MAINTAINED
  };
  // Method to start the device operation.
  // This starts the operation ot the deflection mirrors and the laser triggering.
  // When this call is used, the device will stay in operation until stop is called (independent// of clients being
  // connected or not).
  rpc Start(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  // Method to stop the device operation.
  // This will stop the deflection mirror operation and laser triggering.
  rpc Stop(.google.protobuf.Empty) returns (.google.protobuf.Empty);
}

