syntax = "proto3";

import "blickfeld/base/data/health.proto";
import "blickfeld/base/options.proto";
package blickfeld.onvif.data;

option (.blickfeld.base.access_control_file) = {
  level: LEVEL_AUTHORIZED
};

// Describes the health of the ONVIF module
message Health {
  // Notification subscription topic
  message Topic {
    // number of raised events corresponding to the topic name (counted on the raising edge)
    uint32 number_of_raised_events = 1;
  }
  // Describes the connected VMS client
  message Client {
    // IP address of the client
    string ip = 1;
    // Time since the client has been actively pulling the ONVIF notifications
    uint32 uptime = 2 [(.blickfeld.base.unit) = "s"];
    // Active subscription topics (key: topic name)
    map<string, .blickfeld.onvif.data.Health.Topic> subscribed_topics = 3;
  }
  // High-level health state of module
  .blickfeld.base.data.Health.State state = 1;
  // Reason for a given state. Only set if state is not STATE_OK
  string state_reason = 2;
  // Served clients (key is unique subscription uuid)
  map<string, .blickfeld.onvif.data.Health.Client> clients = 3;
}

