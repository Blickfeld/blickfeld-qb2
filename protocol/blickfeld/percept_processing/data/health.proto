// Copyright (c) 2023 Blickfeld GmbH.
// All rights reserved.
syntax = "proto3";

import "blickfeld/base/data/health.proto";
import "blickfeld/base/options.proto";
import "blickfeld/percept_pipeline/data/point_cloud_type.proto";
import "blickfeld/percept_pipeline/data/state.proto";
package blickfeld.percept_processing.data;

option cc_enable_arenas = true;
option (.blickfeld.base.access_control_file) = {
  level: LEVEL_AUTHORIZED
};

// A health message that contains information about the pipeline status and the
// module itself.
message Health {
  // Health information of connected clients
  message Client {
    // Point Cloud specific information
    message PointCloud {
      // The point cloud type the client is receiving
      .blickfeld.percept_pipeline.data.PointCloudType point_cloud_type = 1;
    }
    // States specific information
    message States {
    }
    // Volume Map specific information
    message VolumeMap {
    }
    // Identifier of the client
    string uuid = 1;
    // The client peer uri
    string peer_uri = 2;
    // The timestamp of the moment the client connected to processing
    uint64 connection_timestamp = 3;
    // The number of total lost frames since the start of the stream
    uint64 lost_frames = 4;
    // The type of the data streamed to the client
    oneof stream_type {
      // The client receives point cloud stream data
      .blickfeld.percept_processing.data.Health.Client.PointCloud point_cloud = 5;
      // The client receives states stream data
      .blickfeld.percept_processing.data.Health.Client.States states = 6;
      // The client receives volume map stream data
      .blickfeld.percept_processing.data.Health.Client.VolumeMap volume_map = 7;
    }
  }
  // High-level state of module.
  .blickfeld.base.data.Health.State state = 1;
  // Reason for the given state. It is not set if state is STATE_OK.
  string state_reason = 2;
  // Current state of the pipeline. It indicates if the pipeline is stable,
  // unstable or broken, based on the frequency of the data that is processed
  // and published.
  .blickfeld.percept_pipeline.data.State pipeline_state = 4;
  // Health information of all connected clients
  repeated .blickfeld.percept_processing.data.Health.Client clients = 5;
  reserved 3;
}

