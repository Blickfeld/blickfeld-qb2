// Copyright (c) 2023 Blickfeld GmbH.
// All rights reserved.
syntax = "proto3";

import "blickfeld/base/options.proto";
import "blickfeld/percept_processing/data/health.proto";
import "google/protobuf/empty.proto";
package blickfeld.percept_processing.services;

option (.blickfeld.base.access_control_file) = {
  level: LEVEL_AUTHORIZED
};

// A response for getting a stream of health messages about the pipeline
message HealthWatchResponse {
  // The current health message with information about the state of the pipeline
  .blickfeld.percept_processing.data.Health health = 1;
}

// A response for getting an health message about the pipeline
message HealthGetResponse {
  // The current health message with information about the state of the pipeline
  .blickfeld.percept_processing.data.Health health = 1;
}

// An RPC service to request information about the state of the pipeline and of
// the module.
service Health {
  option (.blickfeld.base.access_control_service) = {
    level: LEVEL_AUTHORIZED
  };
  option (.blickfeld.base.protocol_maturity_service) = {
    level: LEVEL_EXPERIMENTAL
  };
  // A method to get a stream of health messages, containing information about
  // the state of the pipeline
  rpc Watch(.google.protobuf.Empty) returns (stream .blickfeld.percept_processing.services.HealthWatchResponse) {
    option (.blickfeld.base.access_control_method) = {
      read_only: true
    };
  }
  // A method to get one health message, containing information about the state
  // of the pipeline
  rpc Get(.google.protobuf.Empty) returns (.blickfeld.percept_processing.services.HealthGetResponse) {
    option (.blickfeld.base.access_control_method) = {
      read_only: true
    };
  }
}

