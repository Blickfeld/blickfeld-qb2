// Copyright (c) 2023 Blickfeld GmbH.
// All rights reserved.
syntax = "proto3";

import "blickfeld/base/options.proto";
import "blickfeld/percept_processing/data/state_list.proto";
package blickfeld.percept_processing.services;

option cc_enable_arenas = true;
option (.blickfeld.base.access_control_file) = {
  level: LEVEL_PUBLIC
};

// A request to receive a stream of state list messages
message StateListStreamRequest {
}

// A response for getting a stream of state list messages from the running
// pipeline
message StateListStreamResponse {
  // The current state list with the information detected in the zones
  // configured in the running pipeline
  .blickfeld.percept_processing.data.StateList state_list = 1;
}

// An RPC service to request a stream of state list messages. If a pipeline is
// already running, it will be used to stream the data. If no pipeline is
// running, it will be started first and then the stream will start. NOTE: in
// this second case, the pipeline will also be automatically stopped once the
// this second case, the pipeline will also be automatically stopped once
// there are no more clients requesting any stream type from the module.
service StateList {
  option (.blickfeld.base.access_control_service) = {
    level: LEVEL_PUBLIC
  };
  option (.blickfeld.base.protocol_maturity_service) = {
    level: LEVEL_MAINTAINED
  };
  // A method to get a stream of state list messages from the pipeline
  rpc Stream(.blickfeld.percept_processing.services.StateListStreamRequest) returns (stream .blickfeld.percept_processing.services.StateListStreamResponse);
}

