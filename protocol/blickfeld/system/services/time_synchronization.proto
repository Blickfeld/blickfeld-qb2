syntax = "proto3";

import "blickfeld/base/options.proto";
import "blickfeld/system/config/time_synchronization.proto";
import "google/protobuf/empty.proto";
package blickfeld.system.services;

option (.blickfeld.base.access_control_file) = {
  level: LEVEL_AUTHORIZED
};

// Request which is sent together with a SetConfig API call
message TimeSynchronizationSetRequest {
  // Time synchronization config to be used
  .blickfeld.system.config.TimeSynchronization config = 1;
}

// Response which is sent as answer for a GetConfig call
message TimeSynchronizationGetResponse {
  // Currently used time synchronization config
  .blickfeld.system.config.TimeSynchronization config = 1;
}

// Response for ListTimeZones request
message TimeSynchronizationListTimeZonesResponse {
  repeated string time_zones = 1;
}

// This service provides methods to configure the time synchronization of the device.
service TimeSynchronization {
  option (.blickfeld.base.access_control_service) = {
    level: LEVEL_AUTHORIZED
  };
  option (.blickfeld.base.protocol_maturity_service) = {
    level: LEVEL_MAINTAINED
  };
  // Set the time synchronization configuration for the device
  rpc Set(.blickfeld.system.services.TimeSynchronizationSetRequest) returns (.google.protobuf.Empty);
  // Get the time synchronization configuration of the device
  rpc Get(.google.protobuf.Empty) returns (.blickfeld.system.services.TimeSynchronizationGetResponse) {
    option (.blickfeld.base.access_control_method) = {
      read_only: true
    };
  }
  // List available time zones
  rpc ListTimeZones(.google.protobuf.Empty) returns (.blickfeld.system.services.TimeSynchronizationListTimeZonesResponse) {
    option (.blickfeld.base.access_control_method) = {
      read_only: true
    };
  }
}

